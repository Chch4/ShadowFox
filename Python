# Task 1: Variables

# 1. Variable named pi
pi = 22 / 7
print("Value of pi:", pi)
print("Data type of pi:", type(pi))

# 2. Variable called 'for' (this will cause SyntaxError since 'for' is a reserved keyword)
# for = 4  # Uncommenting this will throw error
print("Reason: 'for' is a reserved keyword in Python and cannot be used as a variable name.")

# 3. Simple Interest Calculation
P = 1000  # principal amount
R = 5     # rate of interest
T = 3     # time in years
SI = P * R * T / 100
print("Simple Interest:", SI)


# Task 2: Numbers

# 1. Format function
result = format(145, 'o')  # 'o' formats integer into octal
print("Formatted result (octal):", result)

# 2. Area of circular pond
radius = 84
area = 3.14 * (radius ** 2)
print("Area of pond:", area)

# Water in pond
water = int(area * 1.4)  # liters (no decimal)
print("Total water in pond (liters):", water)

# 3. Speed calculation
distance = 490  # meters
time_minutes = 7
time_seconds = time_minutes * 60
speed = int(distance / time_seconds)  # no decimal
print("Speed in m/s:", speed)


# Task 3: List (Justice League)
justice_league = ["Superman", "Batman", "Wonder Woman", "Flash", "Aquaman", "Green Lantern"]

# 1. Count members
print("Number of members:", len(justice_league))

# 2. Add Batgirl and Nightwing
justice_league.extend(["Batgirl", "Nightwing"])
print("After adding new members:", justice_league)

# 3. Wonder Woman as leader
justice_league.remove("Wonder Woman")
justice_league.insert(0, "Wonder Woman")
print("After moving Wonder Woman to leader:", justice_league)

# 4. Separate Aquaman and Flash by adding Superman
justice_league.remove("Superman")
flash_index = justice_league.index("Flash")
justice_league.insert(flash_index, "Superman")
print("After separating Aquaman and Flash:", justice_league)

# 5. Replace with new team
justice_league = ["Cyborg", "Shazam", "Hawkgirl", "Martian Manhunter", "Green Arrow"]
print("New team:", justice_league)

# 6. Sort alphabetically
justice_league.sort()
print("Sorted team:", justice_league)
print("New leader:", justice_league[0])  # Bonus answer


# Task 4: If Condition

# 1. BMI Calculator
height = 1.75
weight = 70
BMI = weight / (height ** 2)

if BMI >= 30:
    category = "Obesity"
elif BMI >= 25:
    category = "Overweight"
elif BMI >= 18.5:
    category = "Normal"
else:
    category = "Underweight"

print("BMI:", round(BMI, 2), "Category:", category)

# 2. City and Country
Australia = ["Sydney", "Melbourne", "Brisbane", "Perth"]
UAE = ["Dubai", "Abu Dhabi", "Sharjah", "Ajman"]
India = ["Mumbai", "Bangalore", "Chennai", "Delhi"]

city = "Abu Dhabi"
if city in Australia:
    print(f"{city} is in Australia")
elif city in UAE:
    print(f"{city} is in UAE")
elif city in India:
    print(f"{city} is in India")
else:
    print(f"{city} not found in list")


# Task 5: For Loop
import random

# 1. Dice rolling statistics
rolls = [random.randint(1, 6) for _ in range(20)]
count_6 = rolls.count(6)
count_1 = rolls.count(1)

# Two consecutive sixes
two_sixes = sum(1 for i in range(len(rolls)-1) if rolls[i] == 6 and rolls[i+1] == 6)

print("Rolls:", rolls)
print("Number of 6s:", count_6)
print("Number of 1s:", count_1)
print("Two 6s in a row:", two_sixes)

# 2. Jumping Jacks Simulation
total_jumping_jacks = 0
for i in range(1, 11):  # 10 sets of 10
    total_jumping_jacks += 10
    print(f"Completed {total_jumping_jacks} jumping jacks")
    tired = "no"  # simulate input (change to "yes" to test stopping early)
    if tired.lower() in ["yes", "y"]:
        print(f"You completed a total of {total_jumping_jacks} jumping jacks.")
        break
else:
    print("Congratulations! You completed the workout.")
